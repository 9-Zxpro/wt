/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-05-20 19:44:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gcetminiwebproject.models.*;
import java.sql.ResultSet;
import javax.servlet.http.*;

public final class GetAddedBuses_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.gcetminiwebproject.models");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("java.sql.ResultSet");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "layout/Header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<!-- Session validation for bus operator  -->\n");

	if(session.getAttribute("type")==null || (!session.getAttribute("type").equals("busoperator"))){
		response.sendRedirect("BusOperatorLogin.jsp");
	}

      out.write("\n");
      out.write("<!-- session validation ends -->\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- ***********   START   *********** -->\n");

	String operatorID=String.valueOf(session.getAttribute("userid"));
	 System.out.print(operatorID);
	ResultSet rs = null;
	BusModel model = new BusModel();
	model.setOperatorID(operatorID);
	rs = model.ViewBusData();

      out.write("\n");
      out.write("	<div class=\"errordiv \">\n");
      out.write("	");

		if (request.getParameter("msg") != null) {
	
      out.write("\n");
      out.write("	<h4>");
      out.print(request.getParameter("msg"));
      out.write("</h4>\n");
      out.write("	");

		}
	
      out.write("\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("<div class=\"main-body\" >\n");
      out.write("<div class=\"left-column \">\n");
      out.write("	<ul>\n");
      out.write("		<li><a href=\"AddNewBus.jsp\">Add new bus</a></li>\n");
      out.write("		<li><a href=\"GetAddedBuses.jsp\">Show buses</a></li>\n");
      out.write("		<li><a href=\"Logout.jsp\">Logout</a></li>\n");
      out.write("	</ul>\n");
      out.write("</div>\n");
      out.write("<br/><br/>\n");
      out.write("<div class=\"mymainWrapper\" style=\"justify-content: space-around;\">\n");
      out.write("	<div class=\"tableWrapper\">\n");
      out.write("		<div class=\"centertitle\">\n");
      out.write("			Added Buses\n");
      out.write("		</div>\n");
      out.write("		<div class=\"tableContent\">\n");
      out.write("			<table class =\"table tablebordered\">\n");
      out.write("				<tr>\n");
      out.write("					<th>BusId</th>\n");
      out.write("					<th>Bus Name</th>\n");
      out.write("					<th>Bus Type</th>\n");
      out.write("					<th>Source City</th>\n");
      out.write("					<th>Destination City</th>\n");
      out.write("					<th>Departure Time</th>\n");
      out.write("					<th>Travel Time</th>\n");
      out.write("					<th>Cost</th>\n");
      out.write("					<th>Operating Days</th>\n");
      out.write("					<th>Seats</th>\n");
      out.write("				</tr>\n");
      out.write("	");

		String busid = "";
		String busname = "";
		String bustype = "";
		String departuretime = "";
		String traveltime = "";
		String sourcecity = "";
		String destinationcity = "";
		float cost = 0;
		int seats = 0;
		String days = "";
		
		while (rs.next()) {
			if (busid.equals("")) {
				busid = rs.getString(1);
				busname = rs.getString(2);
				bustype = rs.getString(3);
				sourcecity = rs.getString(4);
				destinationcity = rs.getString(5);
				departuretime = rs.getString(6);
				traveltime = rs.getString(7);
				cost = rs.getFloat(8);
				days = days + rs.getString(9);
				seats = rs.getInt(10);
			} else {
				if (busid.equals(rs.getString(1))) {
					days = days + ", ";
					days = days + rs.getString(9);
				} else {
	
      out.write("\n");
      out.write("				<tr>\n");
      out.write("					<td>");
      out.print(busid);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(busname);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(bustype);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(sourcecity);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(destinationcity);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(departuretime);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(traveltime);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(cost);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(days);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(seats);
      out.write("</td>\n");
      out.write("					\n");
      out.write("				</tr>\n");
      out.write("	");

		busid = rs.getString(1);
					busname = rs.getString(2);
					bustype = rs.getString(3);
					sourcecity = rs.getString(4);
					destinationcity = rs.getString(5);
					departuretime = rs.getString(6);
					traveltime = rs.getString(7);
					cost = rs.getFloat(8);
					days = rs.getString(9);
					seats = rs.getInt(10);
				}
			}
		}
	
      out.write("\n");
      out.write("				<tr>\n");
      out.write("					<td>");
      out.print(busid);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(busname);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(bustype);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(sourcecity);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(destinationcity);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(departuretime);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(traveltime);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(cost);
      out.write("</td>\n");
      out.write("					<td >");
      out.print(days);
      out.write("</td>\n");
      out.write("					<td>");
      out.print(seats);
      out.write("</td>\n");
      out.write("				</tr>\n");
      out.write("			</table>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- ********************************* -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "layout/Footer.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
